import React from "react";
import { Link } from "react-router-dom";

import { makeGitHubIssueLink } from "src/colorizer/utils/url_utils";
import { VERSION_NUMBER } from "src/constants";

import { type AlertBannerProps } from "./AlertBanner";

const MAX_ERROR_MESSAGE_LENGTH = 50;

/** Trims whitespace at the start and end of each line in a multiline string. */
const trimMultilineString = (str: string): string => {
  return str
    .split("\n")
    .map((line) => line.trim())
    .join("\n");
};

/**
 * Shows an alert banner for when viewer settings could not be loaded
 * from the URL. Includes a link to report the issue on GitHub.
 */
export const showFailedUrlParseAlert = (url: string, error: Error): AlertBannerProps => {
  let errorMessage = error.message;
  if (errorMessage.length > MAX_ERROR_MESSAGE_LENGTH) {
    errorMessage = errorMessage.slice(0, MAX_ERROR_MESSAGE_LENGTH) + "...";
  }
  // Break URL into lines for each param for better readability
  url = url.replace("?", "?\n");
  url = url.replaceAll("&", "\n&");

  const githubIssueLink = makeGitHubIssueLink(
    `Viewer settings could not be loaded from the URL: \`${errorMessage}\``,
    trimMultilineString(`Initial loading of viewer settings from the URL failed unexpectedly.

    **Please provide any additional information that may be helpful in diagnosing the issue:**
      


    ---
    *[The following contents were auto-generated by TFE.]*


    **URL:**
    \`\`\`
    ${url}
    \`\`\`

    **Error:**
    \`\`\`
    ${error}
    \`\`\`

    **Stack trace:**
    \`\`\`
    ${error.stack}
    \`\`\`

    **TFE Version:** ${VERSION_NUMBER}
    `),
    // TODO: If more errors need to set up GitHub tags, make them into an enum.
    ["bug", "auto-generated"]
  );

  return {
    type: "error",
    message: "Some viewer settings could not be loaded from the URL.",
    description: [
      `Encountered the following error when loading viewer settings from the URL: "${error}"`,
      "This is almost certainly a bug. Please report this to the developers using the link.",
    ],
    closable: true,
    action: (
      <Link target="_blank" to={githubIssueLink}>
        Report bug on GitHub
      </Link>
    ),
  };
};
